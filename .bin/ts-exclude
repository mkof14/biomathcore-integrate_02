#!/usr/bin/env bash
set -euo pipefail
FILE="tsconfig.app.json"
[ -f "$FILE" ] || FILE="tsconfig.json"
TMP="$(mktemp)"
trap 'rm -f "$TMP"' EXIT
BAK="$FILE.bak.$(date +%s)"
COMMIT=0

for a in "$@"; do [[ "$a" == "--commit" ]] && COMMIT=1; done
ARGS=()
for a in "$@"; do [[ "$a" != "--commit" ]] && ARGS+=("$a"); done

[[ -f "$FILE" ]] || { echo "err: $FILE not found"; exit 1; }
cp "$FILE" "$BAK"

jq --argjson add "$(printf '%s\n' "${ARGS[@]}" | jq -R . | jq -s .)" '
  .exclude = ((.exclude // []) + $add | unique)
' "$FILE" > "$TMP" || { echo "jq failed"; mv "$BAK" "$FILE"; exit 1; }
mv "$TMP" "$FILE"

if pnpm tsc -p "$FILE" --noEmit; then
  echo "tsc OK"
else
  echo "tsc FAILED â€” rolling back"
  mv -f "$BAK" "$FILE"
  exit 2
fi

if [[ "$COMMIT" -eq 1 ]]; then
  git add -- "$FILE"
  git -c core.hooksPath=/dev/null commit -m "chore(ts): exclude -> ${ARGS[*]}" || true
  git tag -f "snap-$(date +%Y%m%d-%H%M%S)"
fi

echo "Backup: $BAK"
